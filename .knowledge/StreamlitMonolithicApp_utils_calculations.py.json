{"is_source_file": true, "format": "Python", "description": "This file contains utility functions for financial calculations related to savings, investments, and risk assessment, utilizing data from city cost indices and external modules.", "external_files": ["./col_data"], "external_methods": ["get_city_col"], "published": [], "classes": [], "methods": [{"name": "float monthly_surplus(income: float, expenses: float)", "description": "Calculates the surplus income after expenses, ensuring non-negative result.", "scope": "", "scopeKind": ""}, {"name": "float savings_rate(income: float, surplus: float)", "description": "Calculates the savings rate as a percentage of income based on surplus and income.", "scope": "", "scopeKind": ""}, {"name": "float emergency_fund_target(expenses: float, risk_tolerance: int)", "description": "Determines the emergency fund target based on expenses and risk tolerance.", "scope": "", "scopeKind": ""}, {"name": "float required_monthly_saving(target_amount: float, current_amount: float, horizon_years: float, city: str, real_return: float = 0.03)", "description": "Computes the required monthly saving to reach a target amount within a horizon, adjusting for city cost-of-living and investment return.", "scope": "", "scopeKind": ""}, {"name": "float risk_capacity(risk_tolerance: int, horizon_years: float)", "description": "Estimates a risk capacity score based on risk tolerance and investment horizon.", "scope": "", "scopeKind": ""}, {"name": "str feasibility_flag(monthly_required: float, available: float)", "description": "Assesses the feasibility of a monthly requirement given available funds, returning color-coded string indicators.", "scope": "", "scopeKind": ""}], "calls": ["get_city_col"], "search-terms": ["calculations", "financial planning", "city cost index", "investment horizon", "risk tolerance", "monthly savings", "emergency fund"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "emergency_fund_target", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def emergency_fund_target(expenses: float, risk_tolerance: int) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(expenses: float, risk_tolerance: int)"}, {"_type": "tag", "name": "feasibility_flag", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def feasibility_flag(monthly_required: float, available: float) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(monthly_required: float, available: float)"}, {"_type": "tag", "name": "monthly_surplus", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def monthly_surplus(income: float, expenses: float) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(income: float, expenses: float)"}, {"_type": "tag", "name": "required_monthly_saving", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def required_monthly_saving(target_amount: float, current_amount: float, horizon_years: float, c/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(target_amount: float, current_amount: float, horizon_years: float, city: str, real_return: float = 0.03)"}, {"_type": "tag", "name": "risk_capacity", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def risk_capacity(risk_tolerance: int, horizon_years: float) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(risk_tolerance: int, horizon_years: float)"}, {"_type": "tag", "name": "savings_rate", "path": "/home/kavia/workspace/code-generation/streamlit-app-18593-18601/StreamlitMonolithicApp/utils/calculations.py", "pattern": "/^def savings_rate(income: float, surplus: float) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(income: float, surplus: float)"}], "hash": "6ce5e53fd20768cbe8b167e71a02eb9d", "format-version": 4, "code-base-name": "StreamlitMonolithicApp", "filename": "StreamlitMonolithicApp/utils/calculations.py", "revision_history": [{"19": ""}]}